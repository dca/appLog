"use strict";

angular.module("ml", [ "ngResource", "elasticjs.service", "btford.socket-io" ]).config(function(socketProvider) {
    var mySocket = io.connect("http://localhost:9603");
    socketProvider.ioSocket(mySocket);
}), angular.module("ml").controller("LoggerCtrl", function($scope, ejs, socket) {
    function logPush(log) {
        log.rowColorClass = mapColor[log.level] || "", $scope.logs.push(log);
    }
    var logsTable = document.querySelector("body");
    $scope.logs = [], $scope.height = window.innerHeight - 150, $scope.predicate = "time", 
    ejs.query().then(function(data) {
        var logs = data.hits.hits || [];
        logs.forEach(function(log) {
            logPush(log._source);
        }), $scope.total = data.hits.total, setTimeout(function() {
            logsTable.scrollTop = logsTable.scrollHeight;
        }, 1e3);
    }), socket.on("log", function(log) {
        logPush(log), $scope.total++, logsTable.scrollTop = logsTable.scrollHeight;
    });
    var mapColor = {
        ERROR: "danger",
        WARNING: "warning"
    };
}), angular.module("ml").factory("ejs", function($q, $http, ejsResource) {
    function query() {
        var _result = {};
        return _result = ES.query(ejs.MatchAllQuery()).size(100).sort("time", "desc").doSearch();
    }
    var ejs = ejsResource("http://localhost:9200"), index = "dca", type = "logger_test", ES = ejs.Request().indices(index).types(type);
    return {
        query: query
    };
});